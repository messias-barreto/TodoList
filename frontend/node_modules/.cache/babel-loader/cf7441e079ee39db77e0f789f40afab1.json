{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"../../hooks/localstorage\";\nconst URL = 'http://127.0.0.1:3200';\nexport const getAllTasks = async function () {\n  let work_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const token = await getToken();\n  const headers = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  const data = await axios.get(`${URL}/tasks/${work_id}`, headers).then(res => {\n    return res.data;\n  }).catch(error => {\n    return error;\n  });\n  return data;\n};\nexport const completeTask = async (task_id, status) => {\n  if (status === false) {\n    const token = await getToken();\n    const headers = {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    const data = await axios.patch(`${URL}/tasks/${task_id}`, {}, headers).then(res => {\n      return res.data;\n    }).catch(() => {\n      return \"Não foi possível Concluir a Tarefa\";\n    });\n    return data;\n  }\n\n  return false;\n};\nexport const removeTasks = async task_id => {\n  await axios.delete(`${URL}/tasks/${task_id}`).then(res => {}).catch(error => {\n    validateMessage(\"Não foi possível Remover a Tarefa!!\", 'success', true);\n  });\n};","map":{"version":3,"names":["axios","getToken","URL","getAllTasks","work_id","token","headers","data","get","then","res","catch","error","completeTask","task_id","status","patch","removeTasks","delete","validateMessage"],"sources":["/home/messiasbarreto/Documents/Projects/Personal/ReactJs/todolistweb/src/pages/Tasks/service.module.ts"],"sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"../../hooks/localstorage\";\nconst URL = 'http://127.0.0.1:3200';\n\nexport const getAllTasks = async (work_id: string = '') => {\n    const token = await getToken();\n    const headers = {\n        headers: { 'Authorization': `Bearer ${token}` }\n    }\n\n    const data = await axios.get(`${URL}/tasks/${work_id}`, headers)\n    .then(res => {\n        return res.data\n    }).catch(error => {\n        return error\n    })\n\n    return data;\n}\n\nexport const completeTask = async (task_id: string, status: boolean) => {\n    if(status === false) {\n        const token = await getToken();\n        const headers = {\n            headers: { 'Authorization': `Bearer ${token}` }\n        }\n\n        const data = await axios.patch(`${URL}/tasks/${task_id}`, {}, headers)\n        .then(res => {\n            return res.data\n        }).catch(() => {\n            return (\"Não foi possível Concluir a Tarefa\");\n        })\n\n        return data\n    }\n\n    return false\n}\n\nexport const removeTasks = async (task_id: string) => {\n    await axios.delete(`${URL}/tasks/${task_id}`).then(res => {\n    }).catch((error) => {\n        validateMessage(\"Não foi possível Remover a Tarefa!!\",'success',true);\n    })\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,WAAW,GAAG,kBAAgC;EAAA,IAAzBC,OAAyB,uEAAP,EAAO;EACvD,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,EAA5B;EACA,MAAMK,OAAO,GAAG;IACZA,OAAO,EAAE;MAAE,iBAAkB,UAASD,KAAM;IAAnC;EADG,CAAhB;EAIA,MAAME,IAAI,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEN,GAAI,UAASE,OAAQ,EAAlC,EAAqCE,OAArC,EAClBG,IADkB,CACbC,GAAG,IAAI;IACT,OAAOA,GAAG,CAACH,IAAX;EACH,CAHkB,EAGhBI,KAHgB,CAGVC,KAAK,IAAI;IACd,OAAOA,KAAP;EACH,CALkB,CAAnB;EAOA,OAAOL,IAAP;AACH,CAdM;AAgBP,OAAO,MAAMM,YAAY,GAAG,OAAOC,OAAP,EAAwBC,MAAxB,KAA4C;EACpE,IAAGA,MAAM,KAAK,KAAd,EAAqB;IACjB,MAAMV,KAAK,GAAG,MAAMJ,QAAQ,EAA5B;IACA,MAAMK,OAAO,GAAG;MACZA,OAAO,EAAE;QAAE,iBAAkB,UAASD,KAAM;MAAnC;IADG,CAAhB;IAIA,MAAME,IAAI,GAAG,MAAMP,KAAK,CAACgB,KAAN,CAAa,GAAEd,GAAI,UAASY,OAAQ,EAApC,EAAuC,EAAvC,EAA2CR,OAA3C,EAClBG,IADkB,CACbC,GAAG,IAAI;MACT,OAAOA,GAAG,CAACH,IAAX;IACH,CAHkB,EAGhBI,KAHgB,CAGV,MAAM;MACX,OAAQ,oCAAR;IACH,CALkB,CAAnB;IAOA,OAAOJ,IAAP;EACH;;EAED,OAAO,KAAP;AACH,CAlBM;AAoBP,OAAO,MAAMU,WAAW,GAAG,MAAOH,OAAP,IAA2B;EAClD,MAAMd,KAAK,CAACkB,MAAN,CAAc,GAAEhB,GAAI,UAASY,OAAQ,EAArC,EAAwCL,IAAxC,CAA6CC,GAAG,IAAI,CACzD,CADK,EACHC,KADG,CACIC,KAAD,IAAW;IAChBO,eAAe,CAAC,qCAAD,EAAuC,SAAvC,EAAiD,IAAjD,CAAf;EACH,CAHK,CAAN;AAIH,CALM"},"metadata":{},"sourceType":"module"}
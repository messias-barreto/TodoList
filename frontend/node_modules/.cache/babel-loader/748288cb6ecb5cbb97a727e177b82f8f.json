{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"../../hooks/localstorage\";\nconst url = 'http://127.0.0.1:3200';\nexport const getAllWorks = async user => {\n  var _user$user;\n\n  const token = await getToken();\n  const headers = {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  };\n  await axios.get(`${url}/works/${(_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.id}`, headers).then(res => {\n    return res.data.data !== undefined ? res.data.data : [];\n  }).catch(error => {\n    return error;\n  });\n};","map":{"version":3,"names":["axios","getToken","url","getAllWorks","user","token","headers","get","id","then","res","data","undefined","catch","error"],"sources":["/home/messiasbarreto/Documents/Projects/Personal/ReactJs/todolistweb/src/pages/Home/service.ts"],"sourcesContent":["import axios from \"axios\";\nimport { getToken } from \"../../hooks/localstorage\";\nconst url = 'http://127.0.0.1:3200';\n\nexport const getAllWorks = async (user: string) => {\n    const token = await getToken();\n        const headers = {\n            headers: {'Authorization': `Bearer ${token}` }\n        }\n          \n        await axios.get(`${url}/works/${ user.user?.id }`, headers).\n            then(res => {\n                return res.data.data !== undefined ? res.data.data : []\n            })\n            .catch((error) => {\n                return (error)\n            })\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAP,IAAwB;EAAA;;EAC/C,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,EAA5B;EACI,MAAMK,OAAO,GAAG;IACZA,OAAO,EAAE;MAAC,iBAAkB,UAASD,KAAM;IAAlC;EADG,CAAhB;EAIA,MAAML,KAAK,CAACO,GAAN,CAAW,GAAEL,GAAI,UAAP,cAAiBE,IAAI,CAACA,IAAtB,+CAAiB,WAAWI,EAAI,EAA1C,EAA6CF,OAA7C,EACFG,IADE,CACGC,GAAG,IAAI;IACR,OAAOA,GAAG,CAACC,IAAJ,CAASA,IAAT,KAAkBC,SAAlB,GAA8BF,GAAG,CAACC,IAAJ,CAASA,IAAvC,GAA8C,EAArD;EACH,CAHC,EAIDE,KAJC,CAIMC,KAAD,IAAW;IACd,OAAQA,KAAR;EACH,CANC,CAAN;AAOP,CAbM"},"metadata":{},"sourceType":"module"}